SPACE=local
DOMAIN=localdomain

server.port=8081
server.tomcat.max-threads=1200

http.max.total=7500
http.max.route=4000

thread.count.size=4
thread.count.limit=8

security.basic.enabled=false
management.security.enabled=false

spring.http.multipart.maxFileSize=-1
spring.http.multipart.maxRequestSize=-1

logger.name=Piazza
logger.console=true

s3.domain=s3.amazonaws.com
s3.use.kms=false

vcap.services.pz-rabbitmq.credentials.protocols.amqp.username=guest
vcap.services.pz-rabbitmq.credentials.protocols.amqp.password=guest
vcap.services.pz-rabbitmq.credentials.protocols.amqp.host=localhost
vcap.services.pz-rabbitmq.credentials.protocols.amqp.port=5672
vcap.services.pz-rabbitmq.credentials.protocols.amqp.vhost=/
vcap.services.pz-blobstore.credentials.bucket=external-public-access-test
vcap.services.pz-blobstore.credentials.encryption_key=null
vcap.services.pz-postgres.credentials.jdbc_uri=jdbc:postgresql://localhost:5432/piazza
vcap.services.pz-postgres.credentials.username=piazza
vcap.services.pz-postgres.credentials.password=piazza
vcap.services.pz-postgres-service-key.credentials.username=piazza
vcap.services.pz-postgres-service-key.credentials.password=piazza
vcap.services.pz-geoserver.credentials.boundless_geoserver_url=https://placeholder.example.com
vcap.services.pz-geoserver.credentials.boundless_geoserver_username=fake-geoserver-username
vcap.services.pz-geoserver.credentials.boundless_geoserver_password=fake-geoserver-password
vcap.services.pz-blobstore.credentials.access_key_id=fake-key-123
vcap.services.pz-blobstore.credentials.secret_access_key=secret-access-123

spring.rabbitmq.host=${vcap.services.pz-rabbitmq.credentials.protocols.amqp.host}
spring.rabbitmq.port=${vcap.services.pz-rabbitmq.credentials.protocols.amqp.port}
spring.rabbitmq.username=${vcap.services.pz-rabbitmq.credentials.protocols.amqp.username}
spring.rabbitmq.password=${vcap.services.pz-rabbitmq.credentials.protocols.amqp.password}
spring.rabbitmq.virtual-host=${vcap.services.pz-rabbitmq.credentials.protocols.amqp.vhost}
spring.datasource.url=${vcap.services.pz-postgres.credentials.jdbc_uri}
spring.datasource.username=${vcap.services.pz-postgres.credentials.username}
spring.datasource.password=${vcap.services.pz-postgres.credentials.password}
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.hibernate.use-new-id-generator-mappings=true
spring.jpa.properties.hibernate.dialect=org.venice.piazza.common.hibernate.util.JsonPostgreSQL94Dialect

geoserver.workspace.name=piazza
geoserver.datastore.name=piazza
geoserver.creation.timeout=15
geoserver.exitOnProvisionFailure=false

workflow.protocol=https
workflow.prefix=pz-workflow
workflow.port=443
workflow.url=${workflow.protocol}://${workflow.prefix}.${DOMAIN}:${workflow.port}

point.cloud.endpoint=https://pzsvc-pdal.stage.geointservices.io/api/v1/pdal

postgres.schema=public

throttle.frequency.interval=5000
key.expiration.time.ms=31556952000
key.inactivity.threshold.ms=15778476000
npe.users.only=false
data.temp.path=tmp

## Servicecontroller Items
security.basic.enabled=true
security.user.name=admin
security.user.password=admin
task.managed.error.limit=2
task.managed.timeout.frequency.seconds=240
async.stale.instance.threshold.seconds=10
async.poll.frequency.seconds=10
async.status.error.limit=10
async.status.endpoint=status
async.results.endpoint=result
async.delete.endpoint=job